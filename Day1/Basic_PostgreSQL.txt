-- Create Authors Table
CREATE TABLE authors (
    author_id SERIAL PRIMARY KEY,
    author_name VARCHAR(100) NOT NULL
);

-- Create Books Table
CREATE TABLE books (
    book_id SERIAL PRIMARY KEY,
    title VARCHAR(100) NOT NULL,
    author_id INT REFERENCES authors(author_id),
    category VARCHAR(50) NOT NULL,
    price DECIMAL(5, 2) NOT NULL
);

-- Insert into authors
INSERT INTO authors (author_name) VALUES
('J.K. Rowling'), ('George Orwell'), ('Agatha Christie'), ('Jane Austen');

-- Insert into books
INSERT INTO books (title, author_id, category, price) VALUES
('Harry Potter', 1, 'Fantasy', 19.99),
('1984', 2, 'Dystopian', 14.50),
('Murder on the Orient Express', 3, 'Mystery', 9.99),
('Emma', 4, 'Classic', 12.00),
('Animal Farm', 2, 'Satire', 11.00);

-- Simple select
SELECT * FROM books;

-- Order by price descending
SELECT title, price FROM books ORDER BY price DESC;

-- Filter by category
SELECT * FROM books WHERE category = 'Mystery';

-- Books with price > 10
SELECT title FROM books WHERE price > 10;

-- Pattern match
SELECT title FROM books WHERE title ILIKE '%a%';

-- Inner Join to see book and author names
SELECT b.title, a.author_name
FROM books b
INNER JOIN authors a ON b.author_id = a.author_id;

-- Average price per author
SELECT a.author_name, AVG(b.price) AS avg_price
FROM books b
JOIN authors a ON b.author_id = a.author_id
GROUP BY a.author_name;

-- Update price of a book
UPDATE books SET price = 15.00 WHERE title = 'Emma';

-- Delete a book
DELETE FROM books WHERE title = 'Animal Farm';

-- if we run this both tables are deleted
DROP TABLE books;
DROP TABLE authors;
